name: Build Docker image

on:
  push:
    branches:
      - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['javascript']
        # Learn more...
    container:
      image: node
    steps:
      - uses: actions/checkout@v2.4.0
      - name: Install & Tests
        run: |
          npm install
      - name: Checkout repository
        uses: actions/checkout@v2.4.0
        with:
          # We must fetch at least the immediate parents so that if this is
          # a pull request then we can checkout the head.
          fetch-depth: 2
      # If this run was triggered by a pull request event, then checkout
      # the head of the pull request instead of the merge commit.
      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}
      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Set up CD
        uses: actions/checkout@v2.4.0
      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v1.2.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1.5.1
      - name: Docker login
        uses: docker/login-action@v1.12.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        uses: docker/build-push-action@v2.7.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
          push: true
          tags: |
            ${{ env.REGISTRY }}/adrianvillanueva997/ukranianbot_telegram:latest
          labels: ${{ steps.meta.outputs.labels }}
