name: Build Docker image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    name: Run clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo clippy
  docker_lint:
    runs-on: ubuntu-latest
    container: hadolint/hadolint:latest-alpine
    steps:
      - uses: actions/checkout@v4
      - run: |
          apk add --no-cache make
          make hadolint
  build_and_test:
    name: Run tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
    #           - nightly
    steps:
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build
      - run: cargo test --verbose
  build-docker:
    runs-on: ubuntu-latest
    needs: [clippy, docker_lint, build_and_test]
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Set up CD
        uses: actions/checkout@v4
      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v2.2.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0
      - name: Docker login
        uses: docker/login-action@v2.2.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGES_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push
        uses: docker/build-push-action@v4.2.1
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.architectures }}
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/adrianvillanueva997/ukranianbot_telegram:latest
          labels: ${{ steps.meta.outputs.labels }}
