name: Cargo Build & Test

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  run_clippy:
    name: Run clippy
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo clippy
  docker_lint:
    runs-on: ubuntu-latest
    container: hadolint/hadolint:latest-alpine
    steps:
      - uses: actions/checkout@v3
      - run: |
          apk add --no-cache make
          make docker-lint
  build_and_test:
    name: Run tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - uses: actions/checkout@v3
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build
      - run: cargo test --verbose
  build_docker_image:
    name: Build docker image
    runs-on: ubuntu-22.04
    needs: [build_and_test, run_clippy, docker_lint]
    strategy:
      matrix:
        architectures:
          - linux/amd64
    steps:
      - name: Set up CD
        uses: actions/checkout@v3
      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@v2.1.0
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: Build
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.architectures }}
          push: false
